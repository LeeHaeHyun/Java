import java.awt.Container;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;

public class Z_Mbti_Dic extends JFrame
{
	// 멤버변수
	private String[] mbtis = { "MBTI란?", "INTJ(인티제)", "INTP(인팁)", "ENTJ(엔티제)", "ENTP(엔팁)", "INFJ(인프제)", "INFP(인프피)", "ENFJ(엔프제)", "ENFP(엔프피)", 
			"ISTJ(잇티제)", "ISFJ(잇프제)",
			"ESTJ(엣티제)", "ESFJ(엣프제)", "ISTP(잇팁)", "ISFP(잇프피)", "ESTP(엣팁)", "ESFP(엣프피)" };
	private ImageIcon[] images = { 
			new ImageIcon("MBTI/MBTI.png"), 
			new ImageIcon("MBTI/INTJ.png"),
			new ImageIcon("MBTI/INTP.png"),
			new ImageIcon("MBTI/ENTJ.png"),
			new ImageIcon("MBTI/ENTP.png"),
			new ImageIcon("MBTI/INFJ.png"),
			new ImageIcon("MBTI/INFP.png"),
			new ImageIcon("MBTI/ENFJ.png"),
			new ImageIcon("MBTI/ENFP.png"),
			new ImageIcon("MBTI/ISTJ.png"),
			new ImageIcon("MBTI/ISFJ.png"),
			new ImageIcon("MBTI/ESTJ.png"),
			new ImageIcon("MBTI/ESFJ.png"),
			new ImageIcon("MBTI/ISTP.png"),
			new ImageIcon("MBTI/ISFP.png"),
			new ImageIcon("MBTI/ESTP.png"),
			new ImageIcon("MBTI/ESFP.png")};

	private JLabel imgLabel = new JLabel(images[0]);
	private JComboBox<String> mbtiComboBox = new JComboBox<String>(mbtis);

	// 생성자
	public Z_Mbti_Dic()
	{
		setTitle("MBTI 백과사전 [Made By 이해현]");
		Container m = getContentPane();
		m.setLayout(new FlowLayout());

		mbtiComboBox.setFont(new Font("나눔고딕", Font.BOLD, 30));
		mbtiComboBox.setPreferredSize(new Dimension(485, 50));
		m.add(mbtiComboBox);
		imgLabel.setBounds(272, 26, 0, 0);
		m.add(imgLabel);
		setLocationRelativeTo(null); //TODO 부모 프레임을 화면 가운데에 배치
		setResizable(false);
		
		mbtiComboBox.addActionListener(new ActionListener()
		{
			@Override
			public void actionPerformed(ActionEvent e)
			{
				JComboBox<String> mb=(JComboBox<String>)e.getSource();
				int index=mb.getSelectedIndex();
				imgLabel.setIcon(images[index]);
			}			
		});

		setSize(500, 500);
		setVisible(true);
		
		m.setFocusable(true);
		m.requestFocus();
	}
}
